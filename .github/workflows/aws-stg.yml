name: Build (stg)

on:
  push:
    branches:
      - stg
  # pull_request:
  #   branches:
  #     - stg
  #   types:
  #     - opened

env:
  RUN_UNIT_TEST: 'false'
  RUN_SONARQUBE: 'false'
  
  
jobs:
  initialization:
    runs-on: ubuntu-latest
    outputs:
      envvalue1: ${{ steps.setvar.outputs.envvar1 }}
      envvalue2: ${{ steps.setvar.outputs.envvar2 }}
    steps:
      - name: set value
        id: setvar
        # run: |
        #   echo "::set-output name=envvar1::$RUN_UNIT_TEST" 
        #   echo "::set-output name=envvar2::$RUN_SONARQUBE" 
        run: |
          echo "envvar1=$RUN_UNIT_TEST" >> $GITHUB_OUTPUT
          echo "envvar2=$RUN_SONARQUBE" >> $GITHUB_OUTPUT

  # test-job:
  #   if: ${{ needs.initialization.outputs.envvalue1=='true' || (github.event_name == 'pull_request' && github.head_ref != 'stg') }}
  #   uses: ./.github/workflows/1_test.yml
  #   needs: [initialization]

  # sonarqube-job:
  #   if: ${{ success() && needs.initialization.outputs.envvalue2=='true' || (github.event_name == 'pull_request' && github.head_ref != 'stg') }}
  #   uses: ./.github/workflows/2_sonar.yml
  #   secrets:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GLOBAL }}
  #   needs: [initialization]

  cd-job:
    if: ${{ success() || (needs.initialization.outputs.envvalue1=='false' && needs.initialization.outputs.envvalue2=='false') }}
    uses: ./.github/workflows/3_web-aws.yml
    with:
      CONTAINER_NAME: "stg-webclient-$SERVICE_NAME"
      NAMESPACE: "stg-$REPO_NAME"
      SERVICE_NAME: $SERVICE_NAME
      ENV_FILE: "stg"
    secrets:
      KEERON_GITHUB_PAT: ${{ secrets.KEERON_GITHUB_PAT }}
      AWS_REGION: ${{ secrets.KEERON_AWS_REGION }}
      AWS_CONTAINER_REGISTRY: ${{ secrets.KEERON_AWS_CONTAINER_REGISTRY }}
      CLUSTER_NAME: ${{ secrets.KEERON_AWS_STG_CLUSTER_NAME }}
      PROJECT_NAME: ${{ secrets.KEERON_PROJECT_NAME }}
      AWS_ROLE: ${{ secrets.KEERON_AWS_CICD_ROLE }}
    needs: [initialization]
